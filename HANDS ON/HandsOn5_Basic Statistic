{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"HandsOn5_Basic Statistic","provenance":[],"authorship_tag":"ABX9TyOzGc8kH0wmuaIjv2mkHSFk"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Basic Statistics**"],"metadata":{"id":"I8bURLSaN6VH"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"CTk2k2BgN3-V"},"outputs":[],"source":["import numpy as np\n","\n","# Membuat array dasar\n","X = np.array([1,2,3,5,5])"]},{"cell_type":"markdown","source":["## Central Tendency (Ukuran Pemusatan)\n","***"],"metadata":{"id":"fdVuxUD5Xx_4"}},{"cell_type":"markdown","source":["### 1. Mean\n","* Ukuran pemusatan yang populer, biasa disebut dengan rata-rata dalam set data. Didefinisikan sebagai penjumlahan seluruh data, dibagi dengan total jumlah data.\n","> Rumus : $ \\bar X= \\frac{\\sum X}{n}$"],"metadata":{"id":"wIEjkKP85X_-"}},{"cell_type":"code","source":["print('Data :', X)\n","\n","# Mean\n","mean = np.mean(X)\n","print('Mean :', mean)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1dj1iH1oObHM","executionInfo":{"status":"ok","timestamp":1646800440792,"user_tz":-420,"elapsed":469,"user":{"displayName":"Andika Pratama","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhtwP6zCUJTkPBslc0Y8KeyQlDlwuDJz3_D6j38bQ=s64","userId":"10501450849661192390"}},"outputId":"72c70437-85a5-4970-c2b3-57b6dd162021"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Data : [1 2 3 5 5]\n","Mean : 3.2\n"]}]},{"cell_type":"markdown","source":["###2. Median\n","* Nilai tengah dari data-data yang berurutan\n","> Rumus : \n","  1) $ \\frac {(n+1)}{2} $th term if n is odd,\n","  2) Average of $ \\frac{(n)}{2}$ and $ (\\frac{n}{2}+1) $ th terms, if n is even."],"metadata":{"id":"3BLbwSk96nYT"}},{"cell_type":"code","source":["# Median\n","median = np.median(X)\n","print('Median', median)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ia6l71206Y4V","executionInfo":{"status":"ok","timestamp":1646800446614,"user_tz":-420,"elapsed":480,"user":{"displayName":"Andika Pratama","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhtwP6zCUJTkPBslc0Y8KeyQlDlwuDJz3_D6j38bQ=s64","userId":"10501450849661192390"}},"outputId":"adb7cbcc-403a-480e-e7bb-7b33c1e783e8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Median 3.0\n"]}]},{"cell_type":"markdown","source":["###3. Modus\n","* Nilai yang sering muncul dalam dataset. Dapat diaplikasikan ke seluruh level pengukuran data seperti, i.e., nominal, ordinal, interval and skala ratio."],"metadata":{"id":"q55nbMCZ6we7"}},{"cell_type":"code","source":["# Modus\n","vals,counts = np.unique(X, return_counts=True)    # menggunakan numpy\n","index = np.argmax(counts)\n","print(\"Modus:\",vals[index])\n","\n","from scipy import stats\n","print(\"Modus:\",stats.mode(X))                     # menggunakan scipy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tcQQgQxE6dlW","executionInfo":{"status":"ok","timestamp":1646800449648,"user_tz":-420,"elapsed":576,"user":{"displayName":"Andika Pratama","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhtwP6zCUJTkPBslc0Y8KeyQlDlwuDJz3_D6j38bQ=s64","userId":"10501450849661192390"}},"outputId":"3a5fc43b-95b5-42c2-d23f-d7db65c1cb6b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Modus: 5\n","Modus: ModeResult(mode=array([5]), count=array([2]))\n"]}]},{"cell_type":"markdown","source":["## Measure of Spread (Ukuran Persebaran)\n","***"],"metadata":{"id":"JNSsTNeTYKCP"}},{"cell_type":"markdown","source":["###1. Jarak (Range)\n","* Pengukuran paling sederhana untuk menghitung keberagaman. Merupakan jarak antara data terkecil dengan data terbesar.\n","> $ Range= \\max(X)-\\min(X)$"],"metadata":{"id":"-Dbfo3vxcwXz"}},{"cell_type":"code","source":["data1=np.array([1, 3, 4, 5, 5, 6, 7, 11])\n","print(\"Data : \",data1)\n","print()\n","\n","# Range\n","range = data1.max()-data1.min()\n","print(\"Range :\", range)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GdyWfFsqOjCq","executionInfo":{"status":"ok","timestamp":1646800606942,"user_tz":-420,"elapsed":499,"user":{"displayName":"Andika Pratama","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhtwP6zCUJTkPBslc0Y8KeyQlDlwuDJz3_D6j38bQ=s64","userId":"10501450849661192390"}},"outputId":"f21aa909-0ff9-4068-a075-bf880e306d52"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Data :  [ 1  3  4  5  5  6  7 11]\n","\n","Range : 10\n"]}]},{"cell_type":"markdown","source":["###2. Quartile dan Interquartile\n","* Q1 merupakan nilai tengah dari setengah data pertama dari data yang berurutan.\n","* Q2 merupakan nilai tengah kedua dalam dataset atau biasa disebut dengan median.\n","* Q3 merupakan nilai tengah dari setengah data terakhir dari data yang berurutan.\n","* The interquartile range merupakan jarak antara Quartil terbesar dengan Quartil terkecil."],"metadata":{"id":"DByDHaO29VyG"}},{"cell_type":"code","source":["data1=np.array([1, 3, 4, 5, 5, 6, 7, 11])\n","print(\"Data : \",data1)\n","print()\n","\n","# Quartil dan Interquartil\n","Q1 = np.quantile(data1, .25, interpolation = 'midpoint')        # First quartile (Q1) \n","Q2 = np.quantile(data1, .50, interpolation = 'midpoint')        # Second quartile (Q2)\n","Q3 = np.quantile(data1, .75, interpolation = 'midpoint')        # Third quartile (Q3)\n","IQR = Q3 - Q1                                                   # Interquartile Range\n","\n","print(\"Quartile 1:\",Q1)\n","print(\"Quartile 2:\",Q2)\n","print(\"Quartile 3:\",Q3)\n","print(\"Interquartile Range\",IQR)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XH9kTCnM7G1c","executionInfo":{"status":"ok","timestamp":1646800620708,"user_tz":-420,"elapsed":470,"user":{"displayName":"Andika Pratama","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhtwP6zCUJTkPBslc0Y8KeyQlDlwuDJz3_D6j38bQ=s64","userId":"10501450849661192390"}},"outputId":"2fa27eea-771d-4c53-f904-9b619b803d2d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Data :  [ 1  3  4  5  5  6  7 11]\n","\n","Quartile 1: 3.5\n","Quartile 2: 5.0\n","Quartile 3: 6.5\n","Interquartile Range 3.0\n"]}]},{"cell_type":"markdown","source":["###3. **Percentile**\n","* The percentile usually indicates that a certain percentage falls below that percentile. For example, if you score in the 25th percentile, then 25% of test takers are below your score. The “25” is called the percentile rank.\n"],"metadata":{"id":"qArLxvQH9cEO"}},{"cell_type":"code","source":["data1=np.array([1, 3, 4, 5, 5, 6, 7, 11])\n","print(\"Data : \",data1)\n","print()\n","\n","# Percentil\n","percentile_20 = np.percentile(data1,20)                         # 20 Percentile Rank\n","print(\"20th Percentile:\",round(percentile_20,2))      "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lmGxosy57Hd1","executionInfo":{"status":"ok","timestamp":1646800630247,"user_tz":-420,"elapsed":602,"user":{"displayName":"Andika Pratama","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhtwP6zCUJTkPBslc0Y8KeyQlDlwuDJz3_D6j38bQ=s64","userId":"10501450849661192390"}},"outputId":"c912a065-886e-4f3c-bf3a-5a65c36bfeb7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Data :  [ 1  3  4  5  5  6  7 11]\n","\n","20th Percentile: 3.4\n"]}]},{"cell_type":"markdown","source":["###4. **Variance dan Standart Deviasi**\n","* Variance is a measure of how the spread-out a data set is. \n","> $ σ^2 = \\frac{\\sum (X-\\bar X)^2}{n-1}$\n","* Standard Deviation is the square root of variance. It is denoted by greek letter sigma σ.\n","> $ σ = \\sqrt(\\frac{\\sum (Xi- \\bar X)^2}{n})$"],"metadata":{"id":"qpCKoXp29hFl"}},{"cell_type":"code","source":["data1=np.array([1, 3, 4, 5, 5, 6, 7, 11])\n","print(\"Data : \",data1)\n","print()\n","\n","# Varian\n","varian = np.var(data1,ddof=1)\n","print(\"Varian:\", varian)\n","\n","# Standart Deviasi\n","standev = np.std(data1,ddof=1)\n","print(\"Standard Deviasi:\", standev)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A0rdUACz9C3V","executionInfo":{"status":"ok","timestamp":1646800638826,"user_tz":-420,"elapsed":445,"user":{"displayName":"Andika Pratama","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhtwP6zCUJTkPBslc0Y8KeyQlDlwuDJz3_D6j38bQ=s64","userId":"10501450849661192390"}},"outputId":"e112fa70-cb5b-4ae4-a645-c3d48436f845"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Data :  [ 1  3  4  5  5  6  7 11]\n","\n","Varian: 8.785714285714286\n","Standard Deviasi: 2.9640705601780613\n"]}]},{"cell_type":"markdown","source":["##Covariance and Correlation\n","***"],"metadata":{"id":"RE4YxE4XYcPF"}},{"cell_type":"markdown","source":["###1. Covariance\n","* Covariance is a statistical technique used for determining the relationship between the movement of two random variables. In short, how much two random variables change together.\n","* Provides a measure of the strength of the correlation between two or more sets of randomvariates.\n","* Example: Let E(x) be the expected value of a given variable x, and E(y) be the expected valueof variable y, then the covariance between x and y is given by:\n","> $ cov ( x , y )=E[ x y ]−E [ x ] E[ y ] $\n","> * If cov(x, y) = 0 then variables are uncorrelated\n","> * If cov(x, y) > 0 then variables positively correlated\n","> * If cov(x, y) > < 0 then variables negatively correlated\n","\n","\n"],"metadata":{"id":"puEAK0UEjjVR"}},{"cell_type":"code","source":["a = np.array([1,2,3,4,5,6,7,8,9])\n","b = np.array([9,8,7,6,5,4,3,2,1])\n","print(a)\n","print(b)\n","\n","# Covariance\n","covarian = np.cov(a,b)[0,1]\n","print(\"\\nCovariance :\", covarian)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YJGASjlCSZxP","executionInfo":{"status":"ok","timestamp":1646800851770,"user_tz":-420,"elapsed":38,"user":{"displayName":"Andika Pratama","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhtwP6zCUJTkPBslc0Y8KeyQlDlwuDJz3_D6j38bQ=s64","userId":"10501450849661192390"}},"outputId":"744fc395-faf6-4ec2-f484-2b05ccb490a7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4 5 6 7 8 9]\n","[9 8 7 6 5 4 3 2 1]\n","\n","Covariance : -7.5\n"]}]},{"cell_type":"markdown","source":["###2. Correlation\n","* It is the measure of the strength of the relation between two variables. How strongly two variablesare connected is defined as the correlation.\n","* It depends upon two variables, change in one variable effect a change in second variable.\n","* Its value lies in the range of -1 and +1. r is called the Pearson's correlation coefficient.\n","* Is related to covariance by the given formula:\n","> $ r= \\frac{cov( x , y )}{σ_{x} σ_{y}} $\n","> * A correlation coefficient greater than zero indicates a positive relationship while a value less than zero signifies a negative relationship.\n","> * A value of zero indicates no relationship between the two variables being compared."],"metadata":{"id":"landoDYU-Eai"}},{"cell_type":"code","source":["a = np.array([1,2,3,4,5,6,7,8,9])\n","b = np.array([9,8,7,6,5,4,3,2,1])\n","print(a)\n","print(b)\n","\n","# Correlation\n","corr = np.corrcoef(a,b)\n","print('\\nCorrelation :')\n","print(corr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zr2c4Y6d-ndr","executionInfo":{"status":"ok","timestamp":1646800878065,"user_tz":-420,"elapsed":456,"user":{"displayName":"Andika Pratama","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhtwP6zCUJTkPBslc0Y8KeyQlDlwuDJz3_D6j38bQ=s64","userId":"10501450849661192390"}},"outputId":"3b1ea0fd-c648-4572-9585-619e13aedc0f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4 5 6 7 8 9]\n","[9 8 7 6 5 4 3 2 1]\n","\n","Correlation :\n","[[ 1. -1.]\n"," [-1.  1.]]\n"]}]},{"cell_type":"markdown","source":["##Kurtosis\n","***\n","* Measure of how tall and sharp the central peak is, relative to a standard bell curve.\n","* Also called as the measure oftailednessof a data distribution."],"metadata":{"id":"1zADKWmEYjEK"}},{"cell_type":"code","source":["data2 = np.linspace(-5,5,20)\n","print('Data :')\n","print(data2)\n","\n","# Kurtosis\n","kurtosis = stats.kurtosis(data2)\n","print(\"\\nKurtosis :\", kurtosis)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uqskTLanTkHn","executionInfo":{"status":"ok","timestamp":1646789938250,"user_tz":-420,"elapsed":540,"user":{"displayName":"Andika Pratama","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhtwP6zCUJTkPBslc0Y8KeyQlDlwuDJz3_D6j38bQ=s64","userId":"10501450849661192390"}},"outputId":"71815e95-1d49-4f47-cd8c-157243fe61bc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Data :\n","[-5.         -4.47368421 -3.94736842 -3.42105263 -2.89473684 -2.36842105\n"," -1.84210526 -1.31578947 -0.78947368 -0.26315789  0.26315789  0.78947368\n","  1.31578947  1.84210526  2.36842105  2.89473684  3.42105263  3.94736842\n","  4.47368421  5.        ]\n","\n","Kurtosis : -1.2060150375939847\n"]}]},{"cell_type":"markdown","source":["##Skewness\n","***\n","Skewness is the amount and direction of skew in data distribution,i.e.deviation from the horizontal symmetry. The following is an example of finding skewness."],"metadata":{"id":"YHbc26aIYoGQ"}},{"cell_type":"code","source":["from scipy.stats import skewnorm\n","import matplotlib.pyplot as plt\n","\n","numValues = 10000\n","maxValue = 100\n","skewness = -5                                                       # Negative values are left skewed, positive values are right skewed.\n","random = skewnorm.rvs(a = skewness,loc=maxValue, size=numValues)    # Skewnorm function\n","random = random - min(random)                                       # Shift the set so the minimum value is equal to zero.\n","random = random / max(random)                                       # Standadize all the vlues between 0 and 1. \n","random = random * maxValue                                          # Multiply the standardized values by the maximum value.\n","\n","# Plot histogram to check skewness\n","plt.hist(random,30,density=True, color = 'red', alpha=0.1)\n","plt.show()\n","\n","# Print Skewness\n","skew = stats.skew(data2)\n","print(\"\\nSkewness :\", skew)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"tzroEpR8UQyb","executionInfo":{"status":"ok","timestamp":1646789895531,"user_tz":-420,"elapsed":492,"user":{"displayName":"Andika Pratama","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhtwP6zCUJTkPBslc0Y8KeyQlDlwuDJz3_D6j38bQ=s64","userId":"10501450849661192390"}},"outputId":"44d20334-f4ce-4373-bf2b-79c7d8e507de"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","Skewness : -1.0167718723297815e-16\n"]}]},{"cell_type":"markdown","source":["## Eigen\n","***\n","LetA be an nXn matrix (SquareMatrix).\n","\n","1. An **eigen vector** of A is a non zero vector v in Rn such that Av=λv,for some scalar λ.\n","2. An **eigen value** of A is a scalar λ such that the equation Av=λv has a non trivial solution.\n","\n","> If Av=λv for v not equal to 0,we say that λ is the eigenvalue for v,and that v is aneigenvector for λ.\n","\n","The German prefix “eigen” roughly translates to “self” or “own”. An eigenvector ofAis a vector that is taken to a multiple of itself by the matrix transformationT(x)=Ax,which perhaps explains the terminology. On the other hand, “eigen” is often translated as “characteristic”; we may think of an eigenvector as describing an intrinsic, or characteristic, property ofA.\n","\n","\n","> Note-Eigenvalues and eigenvectors are only for square matrices."],"metadata":{"id":"2kgiI9cOYsy_"}},{"cell_type":"code","source":["m = np.matrix([[4,2,3],[6,7,5],[3,6,1]])\n","print(m)\n","print()\n","\n","e = np.eye(3)\n","print(e)\n","print()\n","\n","# Creating a new matrix which is linear transformation of x\n","n = m + 45*e\n","eigen_m = np.linalg.eig(m)\n","print('Eigen Matriks M :\\n', eigen_m)\n","print('\\nEigen Value Matriks M :\\n', eigen_m[0])\n","print('\\nEigen Vector Matriks M :\\n', eigen_m[1])\n","\n","eigen_n = np.linalg.eig(n)\n","print('\\nEigen Matriks N :\\n', eigen_n)\n","print('\\nEigen Value Matriks N :\\n', eigen_n[0])\n","print('\\nEigen Vector Matriks N :\\n', eigen_n[1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"13XZ-8uaVT9m","executionInfo":{"status":"ok","timestamp":1646790586685,"user_tz":-420,"elapsed":577,"user":{"displayName":"Andika Pratama","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhtwP6zCUJTkPBslc0Y8KeyQlDlwuDJz3_D6j38bQ=s64","userId":"10501450849661192390"}},"outputId":"b70a8207-0716-42d1-9e1c-0050b337f696"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[4 2 3]\n"," [6 7 5]\n"," [3 6 1]]\n","\n","[[1. 0. 0.]\n"," [0. 1. 0.]\n"," [0. 0. 1.]]\n","\n","Eigen Matriks M :\n"," (array([12.76222365,  1.17374428, -1.93596793]), matrix([[-0.35090794, -0.78464131, -0.36647301],\n","        [-0.79489403,  0.40589024, -0.25466269],\n","        [-0.49498192,  0.4686055 ,  0.89489913]]))\n","\n","Eigen Value Matriks M :\n"," [12.76222365  1.17374428 -1.93596793]\n","\n","Eigen Vector Matriks M :\n"," [[-0.35090794 -0.78464131 -0.36647301]\n"," [-0.79489403  0.40589024 -0.25466269]\n"," [-0.49498192  0.4686055   0.89489913]]\n","\n","Eigen Matriks N :\n"," (array([57.76222365, 46.17374428, 43.06403207]), matrix([[-0.35090794, -0.78464131, -0.36647301],\n","        [-0.79489403,  0.40589024, -0.25466269],\n","        [-0.49498192,  0.4686055 ,  0.89489913]]))\n","\n","Eigen Value Matriks N :\n"," [57.76222365 46.17374428 43.06403207]\n","\n","Eigen Vector Matriks N :\n"," [[-0.35090794 -0.78464131 -0.36647301]\n"," [-0.79489403  0.40589024 -0.25466269]\n"," [-0.49498192  0.4686055   0.89489913]]\n"]}]},{"cell_type":"code","source":["def form1(a , b):\n","    try:\n","        c = ((a+b) / (a-b))\n","    except ZeroDivisionError:\n","        print (\"a/b result in 0\")\n","    else:\n","        print (c)\n","\n","form1(2.0, 3.0)\n","form1(3.0, 3.0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wYljn97mKaLv","executionInfo":{"status":"ok","timestamp":1646972646249,"user_tz":-420,"elapsed":350,"user":{"displayName":"Andika Pratama","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhtwP6zCUJTkPBslc0Y8KeyQlDlwuDJz3_D6j38bQ=s64","userId":"10501450849661192390"}},"outputId":"eec1faec-65e0-4488-ab2b-0602a1e229b2"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["-5.0\n","a/b result in 0\n"]}]}]}